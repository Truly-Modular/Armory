repositories {
    maven { url 'https://maven.uuid.gg/releases' }
    maven { url 'https://maven.kosmx.dev/' }
    maven { url 'https://maven.shedaniel.me/' }
    maven { url 'https://maven.fabricmc.net/' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.terraformersmc.com/' }
    maven { url 'https://www.cursemaven.com' }
    maven { url "https://maven.neoforged.net/releases/" }
    maven { url "https://maven.parchmentmc.org" }
    maven { url = "https://api.modrinth.com/maven" }
    maven {
        url "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup "com.jamieswhiteshirt"
        }
    }
    maven {
        url 'http://trulymodular.duckdns.org/maven'
        allowInsecureProtocol = true
    }
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        content {
            includeGroupByRegex("software\\.bernie.*")
            includeGroup("com.eliotlash.mclib")
        }
    }
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    modApi("com.Truly-Modular.Modular-Item-API:Truly-Modular-miapi-common:${rootProject.miapi_version}-${rootProject.minecraft_version}")
    implementation('org.mariuszgromada.math:MathParser.org-mXparser:4.4.2')
}

architectury {
    common('fabric', 'forge')
}

tasks.register('githubPublish') {
    finalizedBy ':armory-common:publish'
    group = 'publishing'

    doLast {
        publishing.publications.mavenCommon.groupId = "com.${rootProject.github}"
    }
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            version = rootProject.mod_version + "-" + rootProject.minecraft_version

            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        maven { url uri(file("$rootDir/build/repository")) }
    }
}